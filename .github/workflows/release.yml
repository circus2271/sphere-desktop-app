name: Release Electron App

on:
  push:
    tags:
      - 'v*'

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            platform: darwin
            asset_name: .pkg
          - os: windows-latest
            platform: win32
            asset_name: .exe
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm ci
    - name: Build Electron app
      run: |
        npx electron-forge package --platform=${{ matrix.platform }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./out/my-app-${{ github.ref_name }}${{ matrix.asset_name }}
        asset_path: ./my-app-${{ github.ref_name }}${{ matrix.asset_name }}
        asset_name: my-app-${{ github.ref_name }}${{ matrix.asset_name }}
        asset_content_type: application/octet-stream
